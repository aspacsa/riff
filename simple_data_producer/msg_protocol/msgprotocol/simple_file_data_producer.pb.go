// Code generated by protoc-gen-go. DO NOT EDIT.
// source: simple_file_data_producer.proto

/*
Package simple_file_data_producer is a generated protocol buffer package.

It is generated from these files:
	simple_file_data_producer.proto

It has these top-level messages:
	DataFile
	FileData
*/
package simple_file_data_producer

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type DataFile struct {
	RequestId int32  `protobuf:"varint,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	FileName  string `protobuf:"bytes,2,opt,name=file_name,json=fileName" json:"file_name,omitempty"`
}

func (m *DataFile) Reset()                    { *m = DataFile{} }
func (m *DataFile) String() string            { return proto.CompactTextString(m) }
func (*DataFile) ProtoMessage()               {}
func (*DataFile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *DataFile) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func (m *DataFile) GetFileName() string {
	if m != nil {
		return m.FileName
	}
	return ""
}

type FileData struct {
	Data      string `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	RequestId int32  `protobuf:"varint,2,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
}

func (m *FileData) Reset()                    { *m = FileData{} }
func (m *FileData) String() string            { return proto.CompactTextString(m) }
func (*FileData) ProtoMessage()               {}
func (*FileData) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *FileData) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

func (m *FileData) GetRequestId() int32 {
	if m != nil {
		return m.RequestId
	}
	return 0
}

func init() {
	proto.RegisterType((*DataFile)(nil), "DataFile")
	proto.RegisterType((*FileData)(nil), "FileData")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for SimpleFileDataProducer service

type SimpleFileDataProducerClient interface {
	// Obtain the file data
	GetFileData(ctx context.Context, in *DataFile, opts ...grpc.CallOption) (*FileData, error)
}

type simpleFileDataProducerClient struct {
	cc *grpc.ClientConn
}

func NewSimpleFileDataProducerClient(cc *grpc.ClientConn) SimpleFileDataProducerClient {
	return &simpleFileDataProducerClient{cc}
}

func (c *simpleFileDataProducerClient) GetFileData(ctx context.Context, in *DataFile, opts ...grpc.CallOption) (*FileData, error) {
	out := new(FileData)
	err := grpc.Invoke(ctx, "/SimpleFileDataProducer/GetFileData", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for SimpleFileDataProducer service

type SimpleFileDataProducerServer interface {
	// Obtain the file data
	GetFileData(context.Context, *DataFile) (*FileData, error)
}

func RegisterSimpleFileDataProducerServer(s *grpc.Server, srv SimpleFileDataProducerServer) {
	s.RegisterService(&_SimpleFileDataProducer_serviceDesc, srv)
}

func _SimpleFileDataProducer_GetFileData_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DataFile)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SimpleFileDataProducerServer).GetFileData(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/SimpleFileDataProducer/GetFileData",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SimpleFileDataProducerServer).GetFileData(ctx, req.(*DataFile))
	}
	return interceptor(ctx, in, info, handler)
}

var _SimpleFileDataProducer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "SimpleFileDataProducer",
	HandlerType: (*SimpleFileDataProducerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetFileData",
			Handler:    _SimpleFileDataProducer_GetFileData_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "simple_file_data_producer.proto",
}

func init() { proto.RegisterFile("simple_file_data_producer.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 183 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x2f, 0xce, 0xcc, 0x2d,
	0xc8, 0x49, 0x8d, 0x4f, 0xcb, 0xcc, 0x49, 0x8d, 0x4f, 0x49, 0x2c, 0x49, 0x8c, 0x2f, 0x28, 0xca,
	0x4f, 0x29, 0x4d, 0x4e, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x72, 0xe3, 0xe2, 0x70,
	0x49, 0x2c, 0x49, 0x74, 0xcb, 0xcc, 0x49, 0x15, 0x92, 0xe5, 0xe2, 0x2a, 0x4a, 0x2d, 0x2c, 0x4d,
	0x2d, 0x2e, 0x89, 0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0x60, 0x0d, 0xe2, 0x84, 0x8a, 0x78,
	0xa6, 0x08, 0x49, 0x73, 0x71, 0x82, 0x8d, 0xc9, 0x4b, 0xcc, 0x4d, 0x95, 0x60, 0x52, 0x60, 0xd4,
	0xe0, 0x0c, 0xe2, 0x00, 0x09, 0xf8, 0x25, 0xe6, 0xa6, 0x2a, 0xd9, 0x72, 0x71, 0x80, 0xcc, 0x00,
	0x99, 0x25, 0x24, 0xc4, 0xc5, 0x02, 0xb2, 0x0a, 0x6c, 0x02, 0x67, 0x10, 0x98, 0x8d, 0x66, 0x36,
	0x13, 0x9a, 0xd9, 0x46, 0xf6, 0x5c, 0x62, 0xc1, 0x60, 0x97, 0xc2, 0x0c, 0x09, 0x80, 0x3a, 0x53,
	0x48, 0x95, 0x8b, 0xdb, 0x3d, 0xb5, 0x04, 0x6e, 0x36, 0xa7, 0x1e, 0xcc, 0xb9, 0x52, 0x9c, 0x7a,
	0x30, 0x51, 0x25, 0x86, 0x24, 0x36, 0xb0, 0x77, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x09,
	0x3f, 0x77, 0x38, 0xf1, 0x00, 0x00, 0x00,
}
